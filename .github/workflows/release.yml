name: Build and Release CAN Tool

on:
  push:
    tags:
      - "v*"     # Any tag starting with v, e.g. v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller fastapi uvicorn[standard] pydantic jinja2

      - name: Build frontend
        run: |
          cd frontend
          npm ci
          # --- Rollup native binary fix START ---
          # Context: npm sometimes fails to install optional OS-specific Rollup
          # binaries on Windows/macOS when using `npm ci`, which breaks Vite's build
          # with: `Cannot find module @rollup/rollup-<platform>`.
          # Workaround: install the correct optional Rollup package *without* saving
          # it to package.json, but only on Windows or macOS runners.
          case "$RUNNER_OS" in
            Windows)
              npm i --no-save @rollup/rollup-win32-x64-msvc ;;
            macOS)
              npm i --no-save @rollup/rollup-darwin-arm64 || npm i --no-save @rollup/rollup-darwin-x64 ;;
            Linux)
              # Linux selects the correct binary already; nothing to do.
              ;;
          esac
          # --- Rollup native binary fix END ---
          npm run build
          cd ..
          mkdir -p backend/static
          cp -r frontend/dist/* backend/static/

      - name: Build executable
        run: |
          pyinstaller can-tool.spec

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: can-tool-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
