name: Build & Release CAN Tool

on:
  push:
    branches:
      - "**"             # build on any branch push (you can restrict to specific branches)
    tags:
      - "v*"             # publish a release when pushing tags like v1.0.0

concurrency:
  group: build-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Python deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller fastapi "uvicorn[standard]" pydantic jinja2

      - name: Build frontend
        shell: bash
        run: |
          cd frontend
          npm ci
          npm run build
          cd ..
          mkdir -p backend/static
          cp -r frontend/dist/* backend/static/

      - name: Build executable (PyInstaller)
        shell: bash
        run: |
          pyinstaller can-tool.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: can-tool-${{ matrix.os }}-${{ github.sha }}
          path: dist/*
          if-no-files-found: error
          retention-days: 14

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist-all

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist-all/**/*     # upload all platform builds
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
